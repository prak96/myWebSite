{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageName": {
            "type": "string",
            "minLength": 6,
            "maxLength": 10
        },
        "projectName": {
            "type": "string"
        },
        "vmLoop": {
            "type": "int",
            "defaultValue":1
        },
        "vnetAddressPrefix": {
            "type": "string"
        },
        "vmUsername": {
            "type": "string"
        },
        "vmPassword": {
            "type": "securestring",
            "minLength": 5,
            "maxLength": 15
        },
        "vmPublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "allowedValues": [
                "MicrosoftWindowsServer",
                "Canonical",
                "RedHat",
                "Debian",
                "CoreOS",
                "SUSE"
            ]
        },
        "vmOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "allowedValues": [
                "WindowsServer",
                "UbuntuServer",
                "CentOS",
                "Debian",
                "CoreOS",
                "RHEL"
            ]
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "2022-datacenter-azure-edition",
            "allowedValues": [
                "2016-datacenter-gensecond",
                "2016-datacenter-server-core-g2",
                "2016-datacenter-server-core-smalldisk-g2",
                "2016-datacenter-smalldisk-g2",
                "2016-datacenter-with-containers-g2",
                "2016-datacenter-zhcn-g2",
                "2019-datacenter-core-g2",
                "2019-datacenter-core-smalldisk-g2",
                "2019-datacenter-core-with-containers-g2",
                "2019-datacenter-core-with-containers-smalldisk-g2",
                "2019-datacenter-gensecond",
                "2019-datacenter-smalldisk-g2",
                "2019-datacenter-with-containers-g2",
                "2019-datacenter-with-containers-smalldisk-g2",
                "2019-datacenter-zhcn-g2",
                "2022-datacenter-azure-edition",
                "2022-datacenter-azure-edition-core",
                "2022-datacenter-azure-edition-core-smalldisk",
                "2022-datacenter-azure-edition-smalldisk",
                "2022-datacenter-core-g2",
                "2022-datacenter-core-smalldisk-g2",
                "2022-datacenter-g2",
                "2022-datacenter-smalldisk-g2"
            ]
            
        }
    },
    "variables": {
        "locationName": "[resourceGroup().location]",
        "storageN": "[concat(parameters('storageName'),uniqueString(resourceGroup().id))]",
        "vnetN": "[format('{0}-vnet',parameters('projectName'))]",
        "nsgN": "[format('{0}-nsg',parameters('projectName'))]",
        "lbName": "[format('{0}-lb',parameters('projectName'))]",
        "publicIpN": "[format('{0}-ip',variables('lbName'))]",
        "nicName": "[format('{0}nic',parameters('projectName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageN')]",
            "apiVersion": "2023-04-01",
            "location": "[variables('locationName')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2"
         },
         {
            "type": "Microsoft.Network/virtualnetworks",
            "apiVersion": "2023-11-01",
            "name": "[variables('vnetN')]",
            "location": "[variables('locationName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                }
            }
         },
         {
            "type": "Microsoft.Network/virtualnetworks/subnets",
            "apiVersion": "2023-11-01",
            "name": "[concat(variables('vnetN'),'/','subnet',copyIndex())]",
            "copy": {
                "name": "subnetLoop",
                "count": "[parameters('vmLoop')]"
            },
            "properties": {
                "addressPrefix": "[format('{0}.{1}.{2}.0/24', split(parameters('vnetAddressPrefix'),'.')[0], split(parameters('vnetAddressPrefix'),'.')[1],copyIndex())]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgN'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualnetworks', variables('vnetN'))]"
            ]
         },

         {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-11-01",
            "name": "[variables('nsgN')]",
            "location": "[variables('locationName')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http",
                        "properties": {
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "priority": 100,
                            "access": "Allow",
                            "destinationPortRange": "80",
                            "destinationAddressPrefix": "*"
                        }
                     },
                      {
                        "name": "allow-rdp",
                        "properties": {
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "priority": 110,
                            "access": "Allow",
                            "destinationPortRange": "3389",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-https",
                        "properties": {
                            "direction": "Inbound",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "protocol": "Tcp",
                            "priority": 120,
                            "access": "Allow",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*"
                        }
                     }
                ]
            }
         },
         {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpN')]",
            "apiVersion": "2023-11-01",
            "location": "[variables('locationName')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
         },
         {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2023-11-01",
            "name": "[variables('lbName')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "location": "[variables('locationName')]",
            "properties": {
                "probes": [
                    {
                        "name": "LB-probe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "numberOfProbes": 5,
                            "intervalInSeconds": 10
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "LB-frontend",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpN'))]"
                            }
                        }
                     }
                ],
                "backendAddressPools": [
                    {
                        "name": "LB-pools"
        
                     }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LB-rule",
                        "properties": {
                            "protocol": "Tcp",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'),'LB-probe')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'),'LB-frontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'),'LB-pools')]"
                            }
                        }
                     }
                ],

                "inboundNatRules": [
                    {
                        "name": "LB-natRule",
                        "properties": {
                            "protocol": "Tcp",
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'),'LB-pools')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'),'LB-frontend')]"
                            },
                            "frontendPortRangeStart": 1500,
                            "frontendPortRangeEnd": 2000,
                            "backendPort": 3389

                        }
                     }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpN'))]"
            ]
         },
         {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-11-01",
            "name": "[concat(variables('nicName'),copyIndex())]",
            "location": "[variables('locationName')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vmLoop')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties":{
                            "subnet":{
                                "id": "[resourceId('Microsoft.Network/virtualnetworks/subnets',variables('vnetN'),concat('subnet', copyIndex()))]"
                            },
                            "loadBalancerBackendAddressPools":
                            [
                                {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'),'LB-Pools')]"
                                }
                            ],
                            "privateIPAllocationMethod": "Dynamic"
                        }
                            
                     }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualnetworks/subnets', variables('vnetN'), concat('subnet', copyIndex()))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
            ]
         },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location":"[variables('locationName')]",
            "name": "[concat(format('{0}vm',parameters('projectName')),copyIndex())]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('vmLoop')]"
            },
            
            "properties": {
                "osProfile": {
                    "computerName": "[concat(format('{0}vm',parameters('projectName')),copyIndex())]",
                    "adminUsername": "[parameters('vmUsername')]",
                    "adminPassword": "[parameters('vmPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[parameters('vmOffer')]",
                        "publisher": "[parameters('vmPublisher')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
                         }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "Standard_DS2_v2"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                
                }
                
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"

            ]
           
        }

    ]
}